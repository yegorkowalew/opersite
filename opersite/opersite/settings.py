"""
Django settings for opersite project.

Generated by 'django-admin startproject' using Django 3.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import logging
import os
import socket

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'o&e&p187fag!yuve-%7=l!gh5d6k^q-h@g7jv$)jtso0cnr-7m'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'baseworkplan.apps.BaseworkplanConfig',
    'basedocumentations.apps.BasedocumentaionsConfig',
    'baseorders.apps.BaseordersConfig'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'opersite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'opersite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'ru'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
    # 'C:\\work\\memo\\memo\\static\\',
]

# MEDIA_ROOT = "".join(os.path.join(os.path.dirname(file), 'media').replace('\','/')

MEDIA_ROOT = 'C:/work/opersite/opersite/static/'
MEDIA_URL = '/media/'

myhost = socket.gethostname()

if myhost == 'pdo-pro':
    try:
        from .pdo_local_settings import *
        print("Run on: %s" % myhost)
    except ImportError:
        pass
if myhost == 'bob':
    try:
        from .bob_local_settings import *
        print("Run on: %s" % myhost)
    except ImportError:
        pass

# BASE_PATH = '\\\\srv-file\\FileServer\\ПДО_Производство' 
BASE_PATH = 'C:\\work\\opersite\\opersite\\testfiles'

ORDER_FILE = os.path.join(BASE_PATH, 'Служебные записки.xlsx')

## Папка в которой диспетчера отмечают входящую документацию и имя файла который нужно парсить
IN_DOCUMENT_FOLDER = os.path.join(BASE_PATH, 'График документации')
IN_DOCUMENT_FILE = 'График документации v1.xlsx'

## Папка "Учет конструкторской документации"
TECH_DOC_FOLDER = os.path.join(BASE_PATH, 'Учет конструкторской документации')

## Папка "Учет конструкторской документации" - База дефицитов
TECH_DOC_BASE_FILE = os.path.join(TECH_DOC_FOLDER, 'База дефицитов', 'База.xlsx')

## Папка "Учет конструкторской документации" - Дефициты
TECH_DOC_DEFICIT_FOLDER = os.path.join(TECH_DOC_FOLDER, 'Дефициты')

## Папка "Учет конструкторской документации" - Ежедневные отчеты
TECH_DOC_DAILY_REPORT_FOLDER = os.path.join(TECH_DOC_FOLDER, 'Ежедневные отчеты')